#include <iostream>
#include <fstream>
#include "CodeGenerator.h"

using namespace std;

CodeGen::CodeGen (string filename, LexicalAnalyzer * L)
{

	lex = L;
	eval = "";
	string cppname = filename.substr (0, filename.length()-3) + ".cpp"; 
	cpp.open (cppname.c_str());

	cpp << "// Autogenerated Scheme to C++ Code\n";
	cpp << "// File: " << cppname << "\n";
	cpp << "#include <iostream>\n";
	cpp << "#include \"Object.h\"\n";
	cpp << "using namespace std;\n\n";
	cpp.flush();
}

/********************************************************************************/
/* This function will								*/
/********************************************************************************/
CodeGen::~CodeGen ()
{
	cpp.close();
}

/********************************************************************************/
/* This function will								*/
/********************************************************************************/
void CodeGen::WriteCode (int tabs, string code)
{

	for (int t = 0; t < tabs; t++)
		cpp << '\t';
	cpp << code;
	cpp.flush();
}

string CodeGen::GetEvaluator()
{
	cout << "In GetEval: " << eval << endl;
	return eval;
}


void CodeGen::SetEvaluator(string evaluator)
{
	eval = evaluator;
	cout << "eval: " << eval << endl;
}
